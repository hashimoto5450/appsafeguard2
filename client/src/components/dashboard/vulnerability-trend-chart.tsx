import { useQuery } from "@tanstack/react-query";
import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from "recharts";
import { Skeleton } from "@/components/ui/skeleton";

interface TrendDataPoint {
  period: string;
  label: string;
  high: number;
  medium: number;
  low: number;
  safe: number;
  securityScore: number;
}

interface TrendResponse {
  data: {
    trendData: TrendDataPoint[];
    timeframe: string;
  };
}

export function VulnerabilityTrendChart() {
  const [timeRange, setTimeRange] = useState("week");
  
  // 実際の脆弱性トレンドデータを取得
  const { data: trendResponse, isLoading } = useQuery<TrendResponse>({
    queryKey: ["/api/reports/trends", { timeframe: timeRange }],
  });
  
  // APIレスポンスから必要なデータ形式に変換
  const chartData = trendResponse?.data?.trendData || [];
  
  const handleTimeRangeChange = (value: string) => {
    setTimeRange(value);
  };
  
  return (
    <Card>
      <CardHeader className="pb-2">
        <div className="flex items-center justify-between">
          <CardTitle className="text-base font-medium">脆弱性傾向</CardTitle>
          <Select value={timeRange} onValueChange={handleTimeRangeChange}>
            <SelectTrigger className="w-32 h-8 text-xs">
              <SelectValue placeholder="過去30日" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="week">直近1週間</SelectItem>
              <SelectItem value="month">直近1ヶ月</SelectItem>
              <SelectItem value="quarter">直近3ヶ月</SelectItem>
              <SelectItem value="year">直近1年</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </CardHeader>
      <CardContent>
        {isLoading ? (
          <Skeleton className="w-full h-64" />
        ) : (
          <ResponsiveContainer width="100%" height={280}>
            <LineChart
              data={chartData}
              margin={{ top: 5, right: 20, left: 0, bottom: 5 }}
            >
              <CartesianGrid strokeDasharray="3 3" vertical={false} />
              <XAxis dataKey="label" tick={{ fontSize: 12 }} />
              <YAxis tick={{ fontSize: 12 }} />
              <Tooltip />
              <Legend />
              <Line
                type="monotone"
                dataKey="high"
                stroke="#ef4444"
                name="高"
                strokeWidth={2}
                dot={false}
                activeDot={{ r: 6 }}
              />
              <Line
                type="monotone"
                dataKey="medium"
                stroke="#f97316"
                name="中"
                strokeWidth={2}
                dot={false}
                activeDot={{ r: 6 }}
              />
              <Line
                type="monotone"
                dataKey="low"
                stroke="#eab308"
                name="低"
                strokeWidth={2}
                dot={false}
                activeDot={{ r: 6 }}
              />
              <Line
                type="monotone"
                dataKey="safe"
                stroke="#16a34a"
                name="安全"
                strokeWidth={2}
                dot={false}
                activeDot={{ r: 6 }}
              />
            </LineChart>
          </ResponsiveContainer>
        )}
      </CardContent>
    </Card>
  );
}
